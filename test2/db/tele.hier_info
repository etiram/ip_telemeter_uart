|tele
clk => counter:counter_inst.clk
clk => telemeter:tele_instance.clk
clk => uart:uart_instance.clk
reset_n => uart:uart_instance.reset_n
rx => uart:uart_instance.rx
echo => telemeter:tele_instance.echo
rx_busy <= uart:uart_instance.rx_busy
rx_error <= uart:uart_instance.rx_error
rx_led_1[6] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
rx_led_1[5] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
rx_led_1[4] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
rx_led_1[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
rx_led_1[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
rx_led_1[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
rx_led_1[0] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
rx_led_0[6] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
rx_led_0[5] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
rx_led_0[4] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
rx_led_0[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
rx_led_0[2] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
rx_led_0[1] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
rx_led_0[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
tx_busy <= uart:uart_instance.tx_busy
trigger <= telemeter:tele_instance.trigger
tx <= uart:uart_instance.tx


|tele|Counter:counter_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
output[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
output[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
output[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
output[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
output[4] <= count[4].DB_MAX_OUTPUT_PORT_TYPE
output[5] <= count[5].DB_MAX_OUTPUT_PORT_TYPE
output[6] <= count[6].DB_MAX_OUTPUT_PORT_TYPE
output[7] <= count[7].DB_MAX_OUTPUT_PORT_TYPE
output[8] <= count[8].DB_MAX_OUTPUT_PORT_TYPE
output[9] <= count[9].DB_MAX_OUTPUT_PORT_TYPE
output[10] <= count[10].DB_MAX_OUTPUT_PORT_TYPE
output[11] <= count[11].DB_MAX_OUTPUT_PORT_TYPE
output[12] <= count[12].DB_MAX_OUTPUT_PORT_TYPE
output[13] <= count[13].DB_MAX_OUTPUT_PORT_TYPE
output[14] <= count[14].DB_MAX_OUTPUT_PORT_TYPE
output[15] <= count[15].DB_MAX_OUTPUT_PORT_TYPE
output[16] <= count[16].DB_MAX_OUTPUT_PORT_TYPE
output[17] <= count[17].DB_MAX_OUTPUT_PORT_TYPE
output[18] <= count[18].DB_MAX_OUTPUT_PORT_TYPE
output[19] <= count[19].DB_MAX_OUTPUT_PORT_TYPE
output[20] <= count[20].DB_MAX_OUTPUT_PORT_TYPE
output[21] <= count[21].DB_MAX_OUTPUT_PORT_TYPE


|tele|telemeter:tele_instance
start => Selector7.IN3
start => Selector1.IN3
start => Selector0.IN3
echo => Selector7.IN4
echo => Selector1.IN4
echo => data[15].IN1
echo => Selector7.IN2
echo => Selector1.IN1
clk => counter:counter_inst.clk
data[0] <= data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[8] <= data[8]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[9] <= data[9]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[10] <= data[10]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[11] <= data[11]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[12] <= data[12]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[13] <= data[13]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[14] <= data[14]$latch.DB_MAX_OUTPUT_PORT_TYPE
data[15] <= data[15]$latch.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy$latch.DB_MAX_OUTPUT_PORT_TYPE
trigger <= trigger$latch.DB_MAX_OUTPUT_PORT_TYPE


|tele|telemeter:tele_instance|Counter:counter_inst
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
output[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
output[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
output[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
output[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
output[4] <= count[4].DB_MAX_OUTPUT_PORT_TYPE
output[5] <= count[5].DB_MAX_OUTPUT_PORT_TYPE
output[6] <= count[6].DB_MAX_OUTPUT_PORT_TYPE
output[7] <= count[7].DB_MAX_OUTPUT_PORT_TYPE
output[8] <= count[8].DB_MAX_OUTPUT_PORT_TYPE
output[9] <= count[9].DB_MAX_OUTPUT_PORT_TYPE
output[10] <= count[10].DB_MAX_OUTPUT_PORT_TYPE
output[11] <= count[11].DB_MAX_OUTPUT_PORT_TYPE
output[12] <= count[12].DB_MAX_OUTPUT_PORT_TYPE
output[13] <= count[13].DB_MAX_OUTPUT_PORT_TYPE
output[14] <= count[14].DB_MAX_OUTPUT_PORT_TYPE
output[15] <= count[15].DB_MAX_OUTPUT_PORT_TYPE
output[16] <= count[16].DB_MAX_OUTPUT_PORT_TYPE
output[17] <= count[17].DB_MAX_OUTPUT_PORT_TYPE
output[18] <= count[18].DB_MAX_OUTPUT_PORT_TYPE
output[19] <= count[19].DB_MAX_OUTPUT_PORT_TYPE
output[20] <= count[20].DB_MAX_OUTPUT_PORT_TYPE
output[21] <= count[21].DB_MAX_OUTPUT_PORT_TYPE


|tele|uart:uart_instance
clk => tx_buffer[0].CLK
clk => tx_buffer[1].CLK
clk => tx_buffer[2].CLK
clk => tx_buffer[3].CLK
clk => tx_buffer[4].CLK
clk => tx_buffer[5].CLK
clk => tx_buffer[6].CLK
clk => tx_buffer[7].CLK
clk => tx_buffer[8].CLK
clk => tx_buffer[9].CLK
clk => tx_state.CLK
clk => tx_busy~reg0.CLK
clk => tx~reg0.CLK
clk => tx_count[0].CLK
clk => tx_count[1].CLK
clk => tx_count[2].CLK
clk => tx_count[3].CLK
clk => rx_buffer[0].CLK
clk => rx_buffer[1].CLK
clk => rx_buffer[2].CLK
clk => rx_buffer[3].CLK
clk => rx_buffer[4].CLK
clk => rx_buffer[5].CLK
clk => rx_buffer[6].CLK
clk => rx_buffer[7].CLK
clk => rx_buffer[8].CLK
clk => rx_state.CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => rx_error~reg0.CLK
clk => rx_busy~reg0.CLK
clk => rx_count[0].CLK
clk => rx_count[1].CLK
clk => rx_count[2].CLK
clk => rx_count[3].CLK
clk => os_count[0].CLK
clk => os_count[1].CLK
clk => os_count[2].CLK
clk => os_count[3].CLK
clk => os_pulse.CLK
clk => baud_pulse.CLK
clk => count_os[0].CLK
clk => count_os[1].CLK
clk => count_os[2].CLK
clk => count_os[3].CLK
clk => count_os[4].CLK
clk => count_os[5].CLK
clk => count_os[6].CLK
clk => count_os[7].CLK
clk => count_os[8].CLK
clk => count_baud[0].CLK
clk => count_baud[1].CLK
clk => count_baud[2].CLK
clk => count_baud[3].CLK
clk => count_baud[4].CLK
clk => count_baud[5].CLK
clk => count_baud[6].CLK
clk => count_baud[7].CLK
clk => count_baud[8].CLK
clk => count_baud[9].CLK
clk => count_baud[10].CLK
clk => count_baud[11].CLK
clk => count_baud[12].CLK
reset_n => rx_state.ACLR
reset_n => rx_data[0]~reg0.ACLR
reset_n => rx_data[1]~reg0.ACLR
reset_n => rx_data[2]~reg0.ACLR
reset_n => rx_data[3]~reg0.ACLR
reset_n => rx_data[4]~reg0.ACLR
reset_n => rx_data[5]~reg0.ACLR
reset_n => rx_data[6]~reg0.ACLR
reset_n => rx_data[7]~reg0.ACLR
reset_n => rx_error~reg0.ACLR
reset_n => rx_busy~reg0.ACLR
reset_n => rx_count[0].ACLR
reset_n => rx_count[1].ACLR
reset_n => rx_count[2].ACLR
reset_n => rx_count[3].ACLR
reset_n => os_count[0].ACLR
reset_n => os_count[1].ACLR
reset_n => os_count[2].ACLR
reset_n => os_count[3].ACLR
reset_n => tx_state.ACLR
reset_n => tx_busy~reg0.PRESET
reset_n => tx~reg0.PRESET
reset_n => tx_count[0].ACLR
reset_n => tx_count[1].ACLR
reset_n => tx_count[2].ACLR
reset_n => tx_count[3].ACLR
reset_n => os_pulse.ACLR
reset_n => baud_pulse.ACLR
reset_n => count_os[0].ACLR
reset_n => count_os[1].ACLR
reset_n => count_os[2].ACLR
reset_n => count_os[3].ACLR
reset_n => count_os[4].ACLR
reset_n => count_os[5].ACLR
reset_n => count_os[6].ACLR
reset_n => count_os[7].ACLR
reset_n => count_os[8].ACLR
reset_n => count_baud[0].ACLR
reset_n => count_baud[1].ACLR
reset_n => count_baud[2].ACLR
reset_n => count_baud[3].ACLR
reset_n => count_baud[4].ACLR
reset_n => count_baud[5].ACLR
reset_n => count_baud[6].ACLR
reset_n => count_baud[7].ACLR
reset_n => count_baud[8].ACLR
reset_n => count_baud[9].ACLR
reset_n => count_baud[10].ACLR
reset_n => count_baud[11].ACLR
reset_n => count_baud[12].ACLR
reset_n => rx_buffer[0].ENA
reset_n => tx_buffer[9].ENA
reset_n => tx_buffer[8].ENA
reset_n => tx_buffer[7].ENA
reset_n => tx_buffer[6].ENA
reset_n => tx_buffer[5].ENA
reset_n => tx_buffer[4].ENA
reset_n => tx_buffer[3].ENA
reset_n => tx_buffer[2].ENA
reset_n => tx_buffer[1].ENA
reset_n => tx_buffer[0].ENA
reset_n => rx_buffer[1].ENA
reset_n => rx_buffer[2].ENA
reset_n => rx_buffer[3].ENA
reset_n => rx_buffer[4].ENA
reset_n => rx_buffer[5].ENA
reset_n => rx_buffer[6].ENA
reset_n => rx_buffer[7].ENA
reset_n => rx_buffer[8].ENA
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_state.DATAB
tx_ena => tx_busy~reg0.DATAIN
tx_data[0] => tx_buffer.DATAB
tx_data[1] => tx_buffer.DATAB
tx_data[2] => tx_buffer.DATAB
tx_data[3] => tx_buffer.DATAB
tx_data[4] => tx_buffer.DATAB
tx_data[5] => tx_buffer.DATAB
tx_data[6] => tx_buffer.DATAB
tx_data[7] => tx_buffer.DATAB
rx => rx_buffer.DATAB
rx => os_count.OUTPUTSELECT
rx => os_count.OUTPUTSELECT
rx => os_count.OUTPUTSELECT
rx => os_count.OUTPUTSELECT
rx => rx_count.OUTPUTSELECT
rx => rx_count.OUTPUTSELECT
rx => rx_count.OUTPUTSELECT
rx => rx_count.OUTPUTSELECT
rx => rx_busy.OUTPUTSELECT
rx => rx_error.IN1
rx_busy <= rx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_error <= rx_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE


